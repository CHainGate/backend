{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "http://localhost/api/config"
  } ],
  "info" : {
    "description" : "This is the config OpenAPI definition.",
    "version" : "1.0.0",
    "title" : "Config OpenAPI"
  },
  "tags" : [ {
    "name" : "authentication"
  }, {
    "name" : "wallet"
  }, {
    "name" : "api-key"
  }, {
    "name" : "logging"
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "authentication" ],
        "summary" : "Authenticate to chaingate",
        "operationId" : "login",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "403" : {
            "description" : "wrong username or password"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Login"
        }
      }
    },
    "/logout" : {
      "get" : {
        "tags" : [ "authentication" ],
        "summary" : "Logs out the user",
        "operationId" : "logout",
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/register" : {
      "post" : {
        "tags" : [ "authentication" ],
        "summary" : "User registration",
        "operationId" : "registerUser",
        "responses" : {
          "201" : {
            "description" : "new user registred"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Register"
        }
      }
    },
    "/verifyemail" : {
      "get" : {
        "tags" : [ "authentication" ],
        "summary" : "Verify user email",
        "operationId" : "verifyEmail",
        "parameters" : [ {
          "in" : "query",
          "name" : "email",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "verification_code",
          "schema" : {
            "type" : "integer"
          },
          "required" : true,
          "description" : "Email verification code"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "email or verification code invalid"
          }
        }
      }
    },
    "/wallet" : {
      "get" : {
        "tags" : [ "wallet" ],
        "summary" : "get wallets",
        "operationId" : "getWallets",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "query",
          "name" : "mode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "test", "prod" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "operation successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Wallet"
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post" : {
        "tags" : [ "wallet" ],
        "summary" : "add new wallet address",
        "operationId" : "addWallet",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "new wallet created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Wallet"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        },
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Wallet"
        }
      }
    },
    "/wallet/{wallet_id}" : {
      "delete" : {
        "tags" : [ "wallet" ],
        "summary" : "delete wallet",
        "operationId" : "deleteWallet",
        "parameters" : [ {
          "in" : "path",
          "name" : "wallet_id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "wallet deleted"
          },
          "400" : {
            "description" : "wallet does not exist"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/apikey" : {
      "get" : {
        "tags" : [ "api-key" ],
        "summary" : "create new secret api key",
        "operationId" : "generateApiKey",
        "parameters" : [ {
          "in" : "query",
          "name" : "mode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "test", "prod" ]
          }
        } ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "new wallet created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiKey"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete" : {
        "tags" : [ "api-key" ],
        "summary" : "delete api key",
        "operationId" : "deleteApiKey",
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "api key deleted"
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/logging" : {
      "get" : {
        "tags" : [ "logging" ],
        "summary" : "get logging information",
        "operationId" : "getLoggingInformation",
        "parameters" : [ {
          "in" : "query",
          "name" : "mode",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "test", "prod" ]
          }
        } ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Logging"
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "responses" : {
      "UnauthorizedError" : {
        "description" : "Access token is missing or invalid"
      }
    },
    "requestBodies" : {
      "Login" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Login"
            }
          }
        }
      },
      "Register" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Register"
            }
          }
        }
      },
      "Wallet" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/WalletRequest"
            }
          }
        }
      }
    },
    "schemas" : {
      "Login" : {
        "title" : "Login",
        "type" : "object",
        "required" : [ "email", "password" ],
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "my@email.ch"
          },
          "password" : {
            "type" : "string",
            "example" : "my-secret-password"
          }
        }
      },
      "Token" : {
        "title" : "Token",
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "example" : "example-jwt-token"
          }
        }
      },
      "Register" : {
        "title" : "Register",
        "type" : "object",
        "required" : [ "first_name", "last_name", "email", "password" ],
        "properties" : {
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "Wallet" : {
        "title" : "Wallet",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "currency" : {
            "type" : "string",
            "enum" : [ "eth", "btc" ]
          },
          "address" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "test", "prod" ]
          }
        }
      },
      "WalletRequest" : {
        "title" : "Wallet",
        "type" : "object",
        "required" : [ "currency", "address", "mode" ],
        "properties" : {
          "currency" : {
            "type" : "string",
            "enum" : [ "eth", "btc" ]
          },
          "address" : {
            "type" : "string"
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "test", "prod" ]
          }
        }
      },
      "ApiKey" : {
        "title" : "Api Key",
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          }
        }
      },
      "Logging" : {
        "title" : "Logging Informations",
        "type" : "object",
        "properties" : {
          "payment_id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "callback_url" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PaymentHistory"
            }
          }
        }
      },
      "PaymentHistory" : {
        "title" : "Payment History",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "pay_address" : {
            "type" : "string"
          },
          "price_amount" : {
            "type" : "number"
          },
          "price_currency" : {
            "type" : "string",
            "enum" : [ "usd", "chf" ]
          },
          "pay_amount" : {
            "type" : "number"
          },
          "pay_currency" : {
            "type" : "string",
            "enum" : [ "eth", "btc" ]
          },
          "actually_paid" : {
            "type" : "number"
          },
          "payment_status" : {
            "type" : "string",
            "enum" : [ "waiting", "partially_paid", "paid", "sending", "finished", "expired", "failed" ]
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      }
    }
  }
}