/*
 * Config OpenAPI
 *
 * This is the config OpenAPI definition.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package configService

import (
	"context"
	"errors"
	"net/http"

	"github.com/CHainGate/backend/configApi"
)

// LoggingApiService is a service that implements the logic for the LoggingApiServicer
// This service should implement the business logic for every endpoint for the LoggingApi API.
// Include any external packages or services that will be required by this service.
type LoggingApiService struct {
}

// NewLoggingApiService creates a default api service
func NewLoggingApiService() configApi.LoggingApiServicer {
	return &LoggingApiService{}
}

// GetLoggingInformation - get logging information
func (s *LoggingApiService) GetLoggingInformation(ctx context.Context, authentication string, mode string) (configApi.ImplResponse, error) {
	// TODO - update GetLoggingInformation with the required logic for this service method.
	// Add api_logging_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Logging{}) or use other options such as http.Ok ...
	//return Response(200, []Logging{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return configApi.Response(http.StatusNotImplemented, nil), errors.New("GetLoggingInformation method not implemented")
}
