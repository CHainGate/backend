/*
 * Config OpenAPI
 *
 * This is the config OpenAPI definition.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package configService

import (
	"CHainGate/backend/configApi"
	"context"
	"errors"
	"net/http"
)

// ApiKeyApiService is a service that implements the logic for the ApiKeyApiServicer
// This service should implement the business logic for every endpoint for the ApiKeyApi API.
// Include any external packages or services that will be required by this service.
type ApiKeyApiService struct {
}

// NewApiKeyApiService creates a default api service
func NewApiKeyApiService() configApi.ApiKeyApiServicer {
	return &ApiKeyApiService{}
}

// DeleteApiKey - delete api key
func (s *ApiKeyApiService) DeleteApiKey(ctx context.Context) (configApi.ImplResponse, error) {
	// TODO - update DeleteApiKey with the required logic for this service method.
	// Add api_api_key_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return configApi.Response(http.StatusNotImplemented, nil), errors.New("DeleteApiKey method not implemented")
}

// GenerateApiKey - create new secret api key
func (s *ApiKeyApiService) GenerateApiKey(ctx context.Context, mode string) (configApi.ImplResponse, error) {
	// TODO - update GenerateApiKey with the required logic for this service method.
	// Add api_api_key_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, ApiKey{}) or use other options such as http.Ok ...
	//return Response(201, ApiKey{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return configApi.Response(http.StatusNotImplemented, nil), errors.New("GenerateApiKey method not implemented")
}
